spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      routes:
        - id: user-service-auth
          uri: http://user-service:8080
          predicates:
            - Path=/api/auth/login
          filters:
            - RewritePath=/api/auth/login,/api/v1/user/login

        - id: user-service-register
          uri: http://user-service:8080
          predicates:
            - Path=/api/auth/register
          filters:
            - RewritePath=/api/auth/register,/api/v1/user/register

        - id: user-service-refresh
          uri: http://user-service:8080
          predicates:
            - Path=/api/auth/refresh
          filters:
            - RewritePath=/api/auth/refresh,/api/v1/user/refresh

        - id: user-service-update
          uri: http://user-service:8080
          predicates:
            - Path=/api/auth/update
          filters:
            - RewritePath=/api/auth/update,/api/v1/user/update

        - id: user-service-search
          uri: http://user-service:8080
          predicates:
            - Path=/api/v1/user/**

  main:
    web-application-type: REACTIVE

# JWT Settings
jwt:
  secret: ${JWT_SECRET}  # берем из существующего K8s Secret

management:
  server:
    port: ${MANAGEMENT_PORT:8081}  # подтягиваем из env или используем дефолт
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: always

logging:
  level:
    root: INFO
    org.springframework.cloud.gateway: DEBUG
    reactor.netty: INFO
    com.turnofevents.apigateway: DEBUG
